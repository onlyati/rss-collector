openapi: 3.1.0
info:
  title: RSS feed data server
  description: >-
    This server provides access some RSS feed which is saved periodically and some
    selected items are stored.
  contact:
    email: onlyati@pm.me
  version: "1.0.2"
tags:
  - name: rss
    description: RSS related endpoints
  - name: user
    description: User related endpoints
  - name: favorite
    description: User's favorite list
servers:
  - url: http://{{.HostName}}:{{.Port}}
    description: Host server
paths:
  /user/v1:
    post:
      tags:
        - user
      summary: Register a new user
      description: Similar endpoint like create but here the user name come from JWT token
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - user
      summary: List users or check if it exists
      parameters:
        - name: username
          in: query
          schema:
            type: string
          description: Name of the user
        - name: index
          in: query
          schema:
            type: int
          description: Start index if you list
      responses:
        "200":
          description: Successful operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    delete:
      tags:
        - user
      summary: Delete user from database
      description: Remove own user from database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/v1/hard:
    delete:
      tags:
        - user
      summary: Cleanup user's table
      description: Delete user and its every single settings from database
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/v1/favorite:
    post:
      tags:
        - favorite
      summary: Create new category for the specific user
      description: They indicates favorite of users
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: category name to check it exists
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteCategory"
        "400":
          description: Wrong request from user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - favorite
      summary: List categories that assigned for a user or test it exists
      parameters:
        - name: index
          in: query
          schema:
            type: int
          description: Start index if you list
        - name: category
          in: query
          schema:
            type: string
          description: category name to check it exists
      responses:
        "200":
          description: Successful operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FavoriteCategory"
    delete:
      tags:
        - favorite
      summary: Delete favorite from user
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: category name to check it exists
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteCategory"
        "404":
          description: Specific user does not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/v1/favorite/hard:
    delete:
      tags:
        - favorite
      summary: Cleanup categories table
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /rss/v1:
    get:
      tags:
        - rss
      summary: list RSS feeds
      description: This endpoint list all registered RSS channels that are collected
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RSS"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /rss/v1/item:
    get:
      tags:
        - rss
      summary: list items from RSS feeds
      parameters:
        - name: from
          in: query
          schema:
            type: string
          description: Specifiy a date for pagination
        - name: categories
          in: query
          schema:
            type: string
          description: Specify category filter, separated by ','
        - name: select
          in: query
          schema:
            type: string
          description: If this is unselect, then reverse selection happen
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RSSItem"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /rss/v1/item-category:
    get:
      tags:
        - rss
      summary: Return with RSS item categories
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      properties:
        user_name:
          type: string
    FavoriteCategory:
      type: object
      properties:
        name:
          type: string
    Error:
      type: object
      properties:
        error:
          type: string
    RSS:
      type: object
      properties:
        id:
          type: string
          examples:
            - 01941c98-c9e5-79dc-8c53-3aa94c458ee9
            - 01941c98-c9b8-722b-95d5-476d6d50bbf2
        title:
          type: string
          examples:
            - Self-Hosted Alternatives to Popular Services
            - The Rust Programming Language
    RSSItem:
      type: object
      properties:
        id:
          type: string
          examples:
            - 01941c98-c9e5-79dc-8c53-3aa94c458ee9
            - 01941c98-c9b8-722b-95d5-476d6d50bbf2
        rss_id:
          type: string
          examples:
            - 01941c98-c9e5-79dc-8c53-3aa94c458ee9
            - 01941c98-c9b8-722b-95d5-476d6d50bbf2
        title:
          type: string
          description: Article/Video/Thread title
        published:
          type: string
          description: When was the item published
        description:
          type: string
          description: Text that is provided in RSS feed
        category:
          type: array
          items:
            type: string
          description: Array that contains the item's categories
        image_link:
          type: string
          description: Optional thumbnail image
        link:
          type: string
          description: Link to the original article
{{ if .AuthEnable }}
  securitySchemes:
    oauth2:
      type: oauth2
      description: Authentication for the API
      flows:
        authorizationCode:
          authorizationUrl: "{{ .JWKSauth }}"
          tokenUrl: "{{ .JWKStoken }}"
          scopes:
            openid: Getting access for base user information
security:
  - oauth2:
      - openid
{{ end }}
